<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.Esther.backup.UserMapper">
  <resultMap id="BaseResultMap" type="cn.Esther.backup.User">
    <id column="user_id" jdbcType="BIGINT" property="user_id" />
    <result column="user_name" jdbcType="VARCHAR" property="user_name" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, password, role, create_at
  </sql>


  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `user`
    where user_name = #{user_name,jdbcType=BIGINT}
  </select>

  <select id="selectByList" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `user`
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `user`
    where user_name = #{user_name,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="cn.Esther.backup.User">
    insert into `user` (user_id, user_name, password, role, create_at)
    values (#{user_id,jdbcType=BIGINT}, #{user_name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{role,jdbcType=INTEGER}, #{createAt,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.Esther.backup.User ">
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        user_id,
      </if>
      <if test="user_name != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="role != role">
        role,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="user_name != null">
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>

      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.Esther.backup.User">
    update `user`
    <set>
      <if test="user_name != null">
        name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        cover = #{role,jdbcType=INTEGER},
      </if>

      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>

    </set>
    where user_name = #{user_name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.Esther.backup.User">
    update `user`
    set user_name = #{user_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=BIGINT}

    where user_name = #{user_name,jdbcType=VARCHAR}
  </update>
</mapper>